name: Browser
component: gui
header: nativeui/browser.h
type: refcounted
namespace: nu
inherit: View
description: Native webview using system browser.
detail: |
  Using `Browser` requires relatively new operating systems, for macOS the
  minimum version required is 10.10, for Linux it is required to install the
  `webkit2gtk` library with at least version 2.8.

constructors:
  - signature: Browser()
    lang: ['cpp']
    description: Create a new browser view.

class_methods:
  - signature: Browser* Create()
    lang: ['lua', 'js']
    description: Create a new browser view.

class_properties:
  - property: const char* kClassName
    lang: ['cpp']
    description: The class name of this view.

methods:
  - signature: void LoadURL(const std::string& url)
    description: Load the URL.

  - signature: void LoadHTML(const std::string& html, const std::string& baseurl)
    description: Set the webpage contents and base URL.
    parameters:
      html:
        description: The string to use as the contents of the webpage.
      baseurl:
        description: A URL used to resolve relative URLs within the document.

  - signature: void ExecuteJavaScript(const std::string& code, const std::function<void(bool, const std::string&)>& callback);
    description: |
      Evaluate `code` in browser and get the evaluated result.

      The `callback` will be called with `callback(success, result)`, the
      `result` is a JSON string.

      Note that due to limitations of system toolkits, the execution may fail if
      the `result` of `code` can not be fully converted to JSON string.

events:
  - callback: void on_close(Browser* self)
    description: Emitted when the web page requests to close.

  - callback: void on_start_navigation(Browser* self, const std::string& url)
    description: Emitted when the browser begins provisional navigation.

  - callback: void on_commit_navigation(Browser* self, const std::string& url)
    description: Emitted when the browser begins to receive web content.

  - callback: void on_finish_navigation(Browser* self, const std::string& url)
    description: Emitted when the navigation is complete.

  - callback: void on_fail_navigation(Browser* self, const std::string& url, int code)
    description: Emitted when the navigation fails.
