version: 2

custom-steps:
  - &install-deps
    run:
      name: Install dependencies
      command: |
        apt-get update
        apt-get install -y git xvfb libgtk-3-dev libnotify-dev webkit2gtk-4.0-dev
  - &install-cross-toolchain
    run:
      name: Install cross compile toolchains
      command: |
        apt-get install -y gcc-5-multilib g++-5-multilib
  - &install-arm-toolchain
    run:
      name: Install ARM toolchains
      command: |
        apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross linux-libc-dev-armhf-cross binutils-aarch64-linux-gnu
  - &install-node
    run:
      name: Install Node.js
      command: |
        curl -sL https://deb.nodesource.com/setup_8.x | bash -
        apt-get install -y nodejs
  - &run-ci
    run:
      name: Run cibuild
      command: |
        xvfb-run node ./scripts/cibuild.js --target-cpu=$TARGET_CPU
  - &store-dists
    persist_to_workspace:
      root: .
      paths:
        - out/Dist/*.zip
  - &tags-only
    tags:
      only: /.*/
    branches:
      ignore: /.*/

jobs:
  yue-linux-x64:
    docker:
      - image: ubuntu:16.04
        environment:
          - TARGET_CPU=x64
          - DISPLAY=:99.0
    steps:
      - *install-deps
      - *install-node
      - checkout
      - *run-ci
      - *store-dists

  yue-linux-x86:
    docker:
      - image: ubuntu:16.04
        environment:
          - TARGET_CPU=x86
          - DISPLAY=:99.0
    steps:
      - *install-deps
      - *install-cross-toolchain
      - *install-node
      - checkout
      - *run-ci
      - *store-dists

  yue-linux-arm:
    docker:
      - image: ubuntu:16.04
        environment:
          - TARGET_CPU=arm
          - DISPLAY=:99.0
    steps:
      - *install-deps
      - *install-cross-toolchain
      - *install-arm-toolchain
      - *install-node
      - checkout
      - *run-ci
      - *store-dists

  yue-linux-arm64:
    docker:
      - image: ubuntu:16.04
        environment:
          - TARGET_CPU=arm64
          - DISPLAY=:99.0
    steps:
      - *install-deps
      - *install-cross-toolchain
      - *install-arm-toolchain
      - *install-node
      - checkout
      - *run-ci
      - *store-dists

  yue-linux-deploy:
    docker:
      - image: circleci/golang:1.9.1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Release archives
          command: |
            export YUE_VERSION=$(git describe --always --tags)
            go get github.com/zcbenz/ghr
            ghr -t $GITHUB_TOKEN -u yue -r yue -b "(placeholder)" -name "Yue $YUE_VERSION" -draft $YUE_VERSION /tmp/workspace/out/Dist

workflows:
  version: 2
  build:
    jobs:
      - yue-linux-x64
      - yue-linux-x86
      - yue-linux-arm
      - yue-linux-arm64
  build-tags:
    jobs:
      - yue-linux-x64:
          filters: *tags-only
      - yue-linux-x86:
          filters: *tags-only
      - yue-linux-arm:
          filters: *tags-only
      - yue-linux-arm64:
          filters: *tags-only
      - yue-linux-deploy:
          requires:
            - yue-linux-x64
            - yue-linux-x86
            - yue-linux-arm
            - yue-linux-arm64
          filters: *tags-only
